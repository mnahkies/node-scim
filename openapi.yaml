openapi: 3.0.0
info:
  title: SCIM 2.0
  description: SCIM 2.0 RAML SAMPLE doc. Tested with Okta
  version: '1.0'
tags:
  - name: users
  - name: groups
  - name: introspection
paths:
  /scim/v2/Users:
    get:
      tags:
        - users
      parameters:
        - name: filter
          description: >-
            Filter search for userName, and status. i.e.:
            `/Users?filter=userName eq j@doe.com`
          in: query
          schema:
            description: >-
              Filter search for userName, and status. i.e.:
              `/Users?filter=userName eq j@doe.com`
            type: string
        - name: count
          description: Number of results per search
          in: query
          schema:
            description: Number of results per search
            type: integer
        - name: startIndex
          description: Index of the result
          in: query
          schema:
            description: Index of the result
            type: integer
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
    post:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: The user has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /scim/v2/Users/{id}:
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
    get:
      tags:
        - users
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Resource not found
    put:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Resource not found
    patch:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchOp'
      responses:
        '200':
          description: User replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Resource not found
    delete:
      tags:
        - users
      responses:
        '204':
          description: No Content (successful deletion)
        '404':
          description: Resource not found
  /scim/v2/Groups:
    get:
      tags:
        - groups
      parameters:
        - name: filter
          description: >-
            Filter search for displayName, and status. i.e.:
            `/Groups?filter=displayName eq "Admins"`
          in: query
          schema:
            description: >-
              Filter search for displayName, and status. i.e.:
              `/Groups?filter=displayName eq "Admins"`
            type: string
        - name: count
          description: Number of results per search
          in: query
          schema:
            description: Number of results per search
            type: integer
        - name: startIndex
          description: Index of the result
          in: query
          schema:
            description: Index of the result
            type: integer
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
    post:
      tags:
        - groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupDefinition'
      responses:
        '201':
          description: The group has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /scim/v2/Groups/{id}:
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
    get:
      tags:
        - groups
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Resource not found
    put:
      tags:
        - groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Group replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Resource not found
    patch:
      tags:
        - groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPatchOp'
      responses:
        '200':
          description: Group replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Resource not found
    delete:
      tags:
        - groups
      responses:
        '204':
          description: No Content (successful deletion)
        '404':
          description: Resource not found
  /scim/v2/ServiceProviderConfig:
    get:
      tags:
        - introspection
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                example:
                  schemas:
                    - >-
                      urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
                  id: ServiceProviderConfig
                  documentationUri: 'http://docs.oktaprise.com/oktaprise/rest/rest-endpoints.html'
                  patch:
                    supported: true
                  bulk:
                    supported: false
                    maxOperations: 0
                    maxPayloadSize: 0
                  filter:
                    supported: true
                    maxResults: 1000
                  changePassword:
                    supported: false
                  sort:
                    supported: false
                  etag:
                    supported: false
                  authenticationSchemes:
                    - name: HTTP Basic
                      description: Authentication scheme using the HTTP Basic Standard
                      specUri: 'http://www.rfc-editor.org/info/rfc2617'
                      documentationUri: 'http://example.com/help/httpBasic.html'
                      type: httpbasic
                  meta:
                    location: scim/v2/ServiceProviderConfig
                    resourceType: ServiceProviderConfig
  /scim/v2/ResourceTypes:
    get:
      tags:
        - introspection
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  schemas:
                    - 'urn:ietf:params:scim:api:messages:2.0:ListResponse'
                  startIndex: 1
                  itemsPerPage: 2
                  totalResults: 2
                  Resources:
                    - schemas:
                        - 'urn:ietf:params:scim:schemas:core:2.0:ResourceType'
                      id: Group
                      description: Group
                      name: Group
                      schema: 'urn:ietf:params:scim:schemas:core:2.0:Group'
                      endpoint: /Groups
                      meta:
                        resourceType: ResourceType
                        location: scim/v2/ResourceTypes/Groups
                    - schemas:
                        - 'urn:ietf:params:scim:schemas:core:2.0:ResourceType'
                      id: User
                      description: User Account
                      name: User
                      schema: 'urn:ietf:params:scim:schemas:core:2.0:User'
                      endpoint: /Users
                      schemaExtensions:
                        - schema: >-
                            urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
                          required: false
                        - schema: >-
                            urn:ietf:params:scim:schemas:extension:oktaprise:2.0:User
                          required: false
                      meta:
                        resourceType: ResourceType
                        location: scim/v2/ResourceTypes/User
  /scim/v2/Schemas:
    get:
      tags:
        - introspection
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  schemas:
                    - 'urn:ietf:params:scim:api:messages:2.0:ListResponse'
                  totalResults: 1
                  startIndex: 1
                  itemsPerPage: 100
                  Resources:
                    - schemas:
                        - 'urn:ietf:params:scim:schemas:core:2.0:Schema'
                      id: 'urn:ietf:params:scim:schemas:oktaprise:2.0:Users'
                      description: Oktaprise parameters.
                      name: OktapriseUsers
                      attributes:
                        - name: badge
                          type: string
                          multiValued: false
                          description: Employee Badge
                          required: true
                          caseExact: false
                          mutability: readWrite
                          returned: always
                          uniqueness: none
                        - name: machine
                          type: string
                          multiValued: false
                          description: Employee Machine
                          required: true
                          caseExact: false
                          mutability: readWrite
                          returned: always
                          uniqueness: none
                      meta:
                        resourceType: Schema
                        location: >-
                          /scim/v2/Schemas/urn:ietf:params:scim:schemas:oktaprise:2.0:Users
security:
  - basic: []
components:
  schemas:
    GroupCollection:
      description: Class describing a collection of gorups
      type: object
      required:
        - schemas
        - totalResults
        - startIndex
        - itemsPerPage
        - resources
      properties:
        schemas:
          description: The list of schemas
          type: array
          items:
            type: string
        totalResults:
          type: integer
        startIndex:
          type: integer
        itemsPerPage:
          type: integer
        resources:
          description: The list of groups
          type: array
          items: {}
    UserGroups:
      description: The user groups
      type: object
      required:
        - display
        - value
      properties:
        display:
          type: string
        value:
          type: string
    UserMetadata:
      description: User metadata
      type: object
      required:
        - resourceType
        - location
      properties:
        resourceType:
          default: User
          type: string
        location:
          description: The URL where the user can be accessed
          type: string
    ScimException:
      description: SCIM Exception
      type: object
      required:
        - schemas
        - detail
        - status
      properties:
        schemas:
          description: The list of schemas
          type: array
          items:
            default: 'urn:ietf:params:scim:api:messages:2.0:Error'
            type: string
        detail:
          type: string
        status:
          type: string
    GroupPatchOp:
      description: Patch Group
      type: object
      required:
        - schemas
        - operations
      properties:
        schemas:
          description: The list of schemas
          type: array
          items:
            default: 'urn:ietf:params:scim:api:messages:2.0:PatchOp'
            type: string
        operations:
          description: Patch operation details
          type: array
          items:
            type: object
            required:
              - op
              - value
            properties:
              op:
                type: string
              value:
                type: object
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
    GroupMembers:
      description: Group Members
      type: object
      required:
        - value
      properties:
        display:
          type: string
        value:
          type: string
    Group:
      description: Group entry
      type: object
      required:
        - schemas
        - id
        - displayName
        - meta
      properties:
        schemas:
          description: The list of schemas
          type: array
          items:
            type: string
        id:
          description: GUID
          type: string
        displayName:
          type: string
        members:
          description: The list of groups
          type: array
          items: {}
        meta:
          description: Group metadata
    GroupMetadata:
      description: Group metadata
      type: object
      required:
        - resourceType
        - location
      properties:
        resourceType:
          default: Group
          type: string
        location:
          description: The URL where the group can be accessed
          type: string
    GroupDefinition:
      description: Metadata for group creation
      type: object
      required:
        - displayName
      properties:
        displayName:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMembers'
    #
    # Users
    #
    UserCollection:
      description: Class describing a collection of users
      type: object
      required:
        - schemas
        - totalResults
        - startIndex
        - itemsPerPage
        - resources
      properties:
        schemas:
          description: The list of schemas
          type: array
          items:
            type: string
        totalResults:
          type: integer
        startIndex:
          type: integer
        itemsPerPage:
          type: integer
        resources:
          description: The list of users
          type: array
          items:
            $ref: '#/components/schemas/User'
    UserPatchOp:
      description: Patch User
      type: object
      required:
        - schemas
        - operations
      properties:
        schemas:
          description: The list of schemas
          type: array
          items:
            default: 'urn:ietf:params:scim:api:messages:2.0:PatchOp'
            type: string
        operations:
          description: Patch operation details
          type: array
          items:
            type: object
            required:
              - op
              - value
            properties:
              op:
                type: string
              value:
                type: object
                required:
                  - active
                properties:
                  active:
                    type: boolean
    CreateUser:
      type: object
      required:
        - schemas
        - id
        - userName
        - name
        - emails
        - active
        - groups
      properties:
        schemas:
          $ref: '#/components/schemas/UserResourceSchemas'
        externalId:
          type: string
        userName:
          description: 'Username, typically their email address'
          type: string
        displayName:
          type: string
        name:
          $ref: '#/components/schemas/UserFullName'
        emails:
          description: The list of emails
          type: array
          items:
            $ref: '#/components/schemas/UserEmail'
        active:
          type: boolean
        groups:
          description: List of user groups
          type: array
          items: {}
          default: []
    User:
      allOf:
        - $ref: '#/components/schemas/CreateUser'
        - type: object
          required:
            - id
            - meta
          properties:
            id:
              type: string
            meta:
              $ref: '#/components/schemas/UserResourceMeta'
    UserFullName:
      description: The full name of the user
      type: object
      properties:
        formatted:
          type: string
        familyName:
          type: string
        givenName:
          type: string
        middleName:
          type: string
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string

    UserEmail:
      description: The user email
      type: object
      required:
        - value
      properties:
        primary:
          type: boolean
          default: false
        type:
          type: string
        value:
          type: string
          format: email
        display:
          type: string

    UserResourceSchemas:
      type: array
      items:
        type: string
        enum:
          - "urn:ietf:params:scim:schemas:core:2.0:User"
    UserResourceMeta:
      type: object
      properties:
        resourceType:
          type: string
          enum:
            - "User"
    #
    # Introspection
    #
    ServiceProviderConfig:
      type: object
      required:
        - patch
        - bulk
        - filter
        - changePassword
        - sort
        - etag
        - authenticationSchemes
      properties:
        schemas:
          type: array
          items:
            type: string
        documentationUri:
          type: string
          format: uri
        patch:
          type: object
          required:
            - supported
          properties:
            supported:
              type: boolean
        bulk:
          type: object
          required:
            - supported
            - maxOperations
            - maxPayloadSize
          properties:
            supported:
              type: boolean
            maxOperations:
              type: integer
            maxPayloadSize:
              type: integer
        filter:
          type: object
          required:
            - supported
            - maxResults
          properties:
            supported:
              type: boolean
            maxResults:
              type: integer
        changePassword:
          type: object
          required:
            - supported
          properties:
            supported:
              type: boolean
        sort:
          type: object
          required:
            - supported
          properties:
            supported:
              type: boolean
        etag:
          type: object
          required:
            - supported
          properties:
            supported:
              type: boolean
        authenticationSchemes:
          type: array
          items:
            $ref: '#/components/schemas/ServiceProviderConfigAuthenticationScheme'
        meta:
          type: object
          properties:
            location:
              type: string
              format: uri
            resourceType:
              type: string
            created:
              type: string
              format: date-time
            lastModified:
              type: string
              format: date-time
            version:
              type: string
    ServiceProviderConfigAuthenticationScheme:
      type: object
      required:
        - type
        - name
        - description
      properties:
        type:
          type: string
          enum:
            - oauth
            - oauth2
            - oauthbearertoken
            - httpbasic
            - httpdigest
        name:
          type: string
        description:
          type: string
        specUri:
          type: string
          format: uri
        documentationUri:
          type: string
          format: uri
        # TODO: unsure if this is an official part of the spec
        primary:
          type: boolean
          nullable: true
