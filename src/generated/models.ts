/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type EmptyObject = {[key: string]: never}

export type t_CreateUser = {
  active: boolean
  displayName?: string | undefined
  emails: t_UserEmail[]
  externalId?: string | undefined
  groups: any[]
  name: t_UserFullName
  schemas: t_UserResourceSchemas
  userName: string
}

export type t_Group = {
  displayName: string
  id: string
  members?: any[] | undefined
  meta: EmptyObject
  schemas: string[]
}

export type t_GroupCollection = {
  itemsPerPage: number
  resources: any[]
  schemas: string[]
  startIndex: number
  totalResults: number
}

export type t_GroupMembers = {
  display?: string | undefined
  value: string
}

export type t_User = t_CreateUser & {
  id: string
  meta: t_UserResourceMeta
}

export type t_UserCollection = {
  itemsPerPage: number
  resources: t_User[]
  schemas: string[]
  startIndex: number
  totalResults: number
}

export type t_UserEmail = {
  display?: string | undefined
  primary?: boolean | undefined
  type?: string | undefined
  value: string
}

export type t_UserFullName = {
  familyName?: string | undefined
  formatted?: string | undefined
  givenName?: string | undefined
  honorificPrefix?: string | undefined
  honorificSuffix?: string | undefined
  middleName?: string | undefined
}

export type t_UserResourceMeta = {
  resourceType?: "User" | undefined
}

export type t_UserResourceSchemas =
  "urn:ietf:params:scim:schemas:core:2.0:User"[]

export type t_DeleteScimV2GroupsIdParamSchema = {
  id: string
}

export type t_DeleteScimV2UsersIdParamSchema = {
  id: string
}

export type t_GetScimV2GroupsQuerySchema = {
  count?: number | undefined
  filter?: string | undefined
  startIndex?: number | undefined
}

export type t_GetScimV2GroupsIdParamSchema = {
  id: string
}

export type t_getScimV2ResourceTypesJson200Response = EmptyObject

export type t_getScimV2SchemasJson200Response = EmptyObject

export type t_getScimV2ServiceProviderConfigJson200Response = EmptyObject

export type t_GetScimV2UsersQuerySchema = {
  count?: number | undefined
  filter?: string | undefined
  startIndex?: number | undefined
}

export type t_GetScimV2UsersIdParamSchema = {
  id: string
}

export type t_PatchScimV2GroupsIdBodySchema = {
  operations: {
    op: string
    value: {
      displayName?: string | undefined
      id?: string | undefined
    }
  }[]
  schemas: string[]
}

export type t_PatchScimV2GroupsIdParamSchema = {
  id: string
}

export type t_PatchScimV2UsersIdBodySchema = {
  operations: {
    op: string
    value: {
      active: boolean
    }
  }[]
  schemas: string[]
}

export type t_PatchScimV2UsersIdParamSchema = {
  id: string
}

export type t_PostScimV2GroupsBodySchema = {
  displayName: string
  members?: t_GroupMembers[] | undefined
}

export type t_PostScimV2UsersBodySchema = {
  active: boolean
  displayName?: string | undefined
  emails: t_UserEmail[]
  externalId?: string | undefined
  groups: any[]
  name: t_UserFullName
  schemas: t_UserResourceSchemas
  userName: string
}

export type t_PutScimV2GroupsIdBodySchema = {
  displayName: string
  id: string
  members?: any[] | undefined
  meta: EmptyObject
  schemas: string[]
}

export type t_PutScimV2GroupsIdParamSchema = {
  id: string
}

export type t_PutScimV2UsersIdBodySchema = t_CreateUser & {
  id: string
  meta: t_UserResourceMeta
}

export type t_PutScimV2UsersIdParamSchema = {
  id: string
}
